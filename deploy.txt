deployment: 

www.instagram.com


cloud services 
azure ,aws 

render,vercel 

backend

server   +   database 
server ->render 
database ->aiven 


github 




asgi - asynchronous gateway interface 
wsgi - web service gateway interface




server -> it ia machine which takes req  -> process -> res




server -render
database -aiven 

pip freeze > requirements.txt 

req+ manage.py  

pip install gunicorn



ec2 -server   - render
rds -db       - aiven
s3 - for files    - cloudinary 



CI/CD pipelines

continuous integration 
continuous deployment  




pip install cloudinary 
pip install django-cloudinary-storage
 

 apps-> cloudinary,cloudinary_storage
 DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage' 

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': env('CLOUDINARY_CLOUD_NAME'),
    'API_KEY': env('CLOUDINARY_API_KEY'),
    'API_SECRET': env('CLOUDINARY_API_SECRET'),
}